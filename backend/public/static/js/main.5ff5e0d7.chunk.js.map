{"version":3,"sources":["components/Person.js","Home.js","Characters.js","App.js","reportWebVitals.js","index.js"],"names":["Person","props","React","useState","name","setName","mass","setMass","height","setHeight","useEffect","a","id","console","log","fetch","hr","json","data","fetchCharacter","Table","striped","bordered","hover","onClick","arr","characters","alreadyinarray","forEach","element","setCharacters","setIdnumber","idnumber","Home","number","setNumber","type","min","onChange","e","target","value","Output","map","item","i","filter","deleteById","Characters","App","Navbar","bg","variant","expand","Container","Brand","Toggle","Collapse","Nav","className","to","exact","activeStyle","color","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ff5e0d7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from \"react-bootstrap/Table\";\n\nfunction Person(props) {\n  let [name, setName] = React.useState(\"\");\n  let [mass, setMass] = React.useState(\"\");\n  let [height, setHeight] = React.useState(\"\");\n\n  React.useEffect(() => {\n    async function fetchCharacter() {\n      if (props.id === \"\") {\n        console.log(\"Nothing to fetch without ID\");\n      } else {\n        let hr = await fetch(`https://swapi.dev/api/people/${props.id}/`);\n        let data = await hr.json();\n        console.log(data.name);\n        setName(data.name);\n        setHeight(data.height);\n        setMass(data.mass);\n      }\n    }\n    fetchCharacter();\n  }, [props.id]);\n\n  const clicked = () => {\n    const arr = [...props.characters];\n    if (props.id === \"\") {\n      console.log(\"Cant put empty data into a list\");\n    } else {\n      let alreadyinarray = false;\n      arr.forEach((element) => {\n        if (element.name === name) {\n          alreadyinarray = true;\n          console.log(\"Character is already on the list\");\n          props.setCharacters([...props.characters]);\n          props.setIdnumber(props.idnumber);\n        }\n      });\n      if (!alreadyinarray) {\n        props.setCharacters([\n          ...props.characters,\n          { id: props.idnumber, name: name, height: height, mass: mass },\n        ]);\n        props.setIdnumber(props.idnumber + 1);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Character Name</th>\n            <th>Height (cm)</th>\n            <th>Mass (kg)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{name}</td>\n            <td>{height}</td>\n            <td>{mass}</td>\n          </tr>\n        </tbody>\n      </Table>\n      <button onClick={clicked}>Add to list</button>\n    </div>\n  );\n}\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./components/Person\";\nfunction Home(props) {\n  let [number, setNumber] = React.useState(\"\");\n\n  return (\n    <div>\n      <Person\n        id={number}\n        characters={props.characters}\n        setCharacters={props.setCharacters}\n        idnumber={props.idnumber}\n        setIdnumber={props.setIdnumber}\n      />\n      <input\n        type=\"number\"\n        min=\"1\"\n        name=\"number\"\n        onChange={(e) => {\n          setNumber(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\nfunction Output(props) {\n  const deleteById = (id) => {\n    const arr = [...props.characters];\n    props.setCharacters(arr.filter((item) => item.id !== id));\n  };\n\n  return (\n    <div>\n      <h2>Added characters data</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Character Name</th>\n            <th>Height (cm)</th>\n            <th>Mass (kg)</th>\n            <th>Option</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.characters.map((item, i) => (\n            <tr key={item.id}>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.height}</td>\n              <td>{item.mass}</td>\n              <td>\n                {<button onClick={() => deleteById(item.id)}>Delete</button>}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nfunction Characters(props) {\n  return (\n    <div>\n      <Output\n        characters={props.characters}\n        setCharacters={props.setCharacters}\n      />\n    </div>\n  );\n}\n\nexport default Characters;\n","import Home from \"./Home\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Characters from \"./Characters\";\n\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  let [characters, setCharacters] = React.useState([\n    {\n      id: 0,\n      name: \"Test Character\",\n      height: \"180\",\n      mass: \"80\",\n    },\n  ]);\n\n  let [idnumber, setIdnumber] = React.useState(1);\n\n  return (\n    <Router>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand>Star wars API</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <NavLink\n                to={\"/\"}\n                exact\n                activeStyle={{ color: \"red\" }}\n                className=\"nav-link\"\n              >\n                Homeview\n              </NavLink>\n              <NavLink\n                to={\"/Characters\"}\n                exact\n                activeStyle={{ color: \"red\" }}\n                className=\"nav-link\"\n              >\n                View content\n              </NavLink>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home\n            idnumber={idnumber}\n            setIdnumber={setIdnumber}\n            characters={characters}\n            setCharacters={setCharacters}\n          />\n        </Route>\n        <Route exact path=\"/Characters\">\n          <Characters characters={characters} setCharacters={setCharacters} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}